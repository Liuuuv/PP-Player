"""
Test final simple pour d√©montrer la persistance des param√®tres IA
"""

import os
import json
import tkinter as tk
from ai_menu_system import AIMenuSystem

class SimpleTestApp:
    def __init__(self):
        self.root = tk.Tk()
        self.root.withdraw()
        self.config_file = "final_test_config.json"
        
        # Nettoyer au d√©but
        if os.path.exists(self.config_file):
            os.remove(self.config_file)

def test_complete_scenario():
    """Test complet du sc√©nario utilisateur"""
    print("üéØ TEST FINAL : Persistance des param√®tres IA")
    print("=" * 50)
    
    # √âtape 1 : Premier lancement
    print("1Ô∏è‚É£ Premier lancement - Param√®tres par d√©faut")
    app1 = SimpleTestApp()
    ai1 = AIMenuSystem(app1)
    print(f"   Learning: {ai1.ai_config['learning_enabled']}")
    print(f"   Recommendations: {ai1.ai_config['use_custom_recommendations']}")
    
    # √âtape 2 : Utilisateur active Learning
    print("\n2Ô∏è‚É£ Utilisateur active Learning")
    ai1.learning_var.set(True)
    ai1.on_learning_changed()
    print(f"   Learning: {ai1.ai_config['learning_enabled']}")
    print(f"   Recommendations: {ai1.ai_config['use_custom_recommendations']}")
    
    # √âtape 3 : Utilisateur active aussi Recommendations
    print("\n3Ô∏è‚É£ Utilisateur active aussi Recommendations")
    ai1.recommendations_var.set(True)
    ai1.on_recommendations_changed()
    print(f"   Learning: {ai1.ai_config['learning_enabled']}")
    print(f"   Recommendations: {ai1.ai_config['use_custom_recommendations']}")
    
    # √âtape 4 : Fermeture
    print("\n4Ô∏è‚É£ Fermeture de l'application")
    ai1.save_ai_config()
    app1.root.destroy()
    print("   ‚úÖ Configuration sauvegard√©e")
    
    # √âtape 5 : R√©ouverture
    print("\n5Ô∏è‚É£ R√©ouverture de l'application")
    app2 = SimpleTestApp()
    # Ne pas nettoyer le fichier cette fois
    if os.path.exists(app2.config_file):
        print("   üìÅ Fichier de configuration trouv√©")
    
    ai2 = AIMenuSystem(app2)
    print(f"   Learning restaur√©: {ai2.ai_config['learning_enabled']}")
    print(f"   Recommendations restaur√©: {ai2.ai_config['use_custom_recommendations']}")
    print(f"   Checkbox Learning: {ai2.learning_var.get()}")
    print(f"   Checkbox Recommendations: {ai2.recommendations_var.get()}")
    
    # √âtape 6 : Utilisateur d√©sactive Learning
    print("\n6Ô∏è‚É£ Utilisateur d√©sactive Learning")
    ai2.learning_var.set(False)
    ai2.on_learning_changed()
    print(f"   Learning: {ai2.ai_config['learning_enabled']}")
    print(f"   Recommendations: {ai2.ai_config['use_custom_recommendations']}")
    
    # √âtape 7 : Nouvelle fermeture/r√©ouverture
    print("\n7Ô∏è‚É£ Nouvelle fermeture et r√©ouverture")
    ai2.save_ai_config()
    app2.root.destroy()
    
    app3 = SimpleTestApp()
    ai3 = AIMenuSystem(app3)
    print(f"   Learning final: {ai3.ai_config['learning_enabled']}")
    print(f"   Recommendations final: {ai3.ai_config['use_custom_recommendations']}")
    
    # V√©rification finale
    success = (
        ai3.ai_config['learning_enabled'] == False and
        ai3.ai_config['use_custom_recommendations'] == True and
        ai3.learning_var.get() == False and
        ai3.recommendations_var.get() == True
    )
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ TEST R√âUSSI !")
        print("‚úÖ Les param√®tres IA sont parfaitement persistants")
        print("‚úÖ L'utilisateur retrouve toujours ses param√®tres")
    else:
        print("‚ùå TEST √âCHOU√â")
    
    # Nettoyer
    app3.root.destroy()
    if os.path.exists("final_test_config.json"):
        os.remove("final_test_config.json")
    
    return success

if __name__ == "__main__":
    print("üöÄ TEST FINAL DE PERSISTANCE DES PARAM√àTRES IA")
    print("üéØ Simulation compl√®te du comportement utilisateur")
    print()
    
    success = test_complete_scenario()
    
    print("\n" + "=" * 50)
    print("üìã R√âSUM√â")
    print("=" * 50)
    
    if success:
        print("üéâ MISSION ACCOMPLIE !")
        print()
        print("üë§ POUR L'UTILISATEUR :")
        print("‚Ä¢ Active Learning et/ou Recommendations une seule fois")
        print("‚Ä¢ Ferme et rouvre l'application autant qu'il veut")
        print("‚Ä¢ Retrouve TOUJOURS ses param√®tres exactement comme il les avait laiss√©s")
        print()
        print("ü§ñ POUR L'IA :")
        print("‚Ä¢ Sauvegarde automatique de tous les param√®tres")
        print("‚Ä¢ Chargement automatique au d√©marrage")
        print("‚Ä¢ Persistance compl√®te des donn√©es collect√©es")
        print("‚Ä¢ Am√©lioration continue session apr√®s session")
        print()
        print("‚ú® R√âSULTAT : Exp√©rience utilisateur parfaite et transparente !")
    else:
        print("‚ùå Il reste des probl√®mes √† corriger")